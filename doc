CREATE TABLE users (
    user_id VARCHAR(50) PRIMARY KEY,  -- Firebase UID as string
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    phone_number VARCHAR(15),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE stations (
    station_id SERIAL PRIMARY KEY,
    station_name VARCHAR(100) NOT NULL,
    location VARCHAR(100) NOT NULL
);


CREATE TABLE trains (
    train_id SERIAL PRIMARY KEY,
    train_name VARCHAR(100) NOT NULL,
    train_number VARCHAR(20) UNIQUE NOT NULL,
    start_station_id INT REFERENCES stations(station_id) ON DELETE CASCADE,
    end_station_id INT REFERENCES stations(station_id) ON DELETE CASCADE,
    departure_time TIME NOT NULL,
    arrival_time TIME NOT NULL,
    days_of_operation VARCHAR(20) NOT NULL
);


CREATE TABLE seats (
    seat_id SERIAL PRIMARY KEY,
    train_id INT REFERENCES trains(train_id) ON DELETE CASCADE,
    seat_number VARCHAR(10) NOT NULL,
    class_type VARCHAR(20) CHECK (class_type IN ('AC1', 'AC2', 'AC3', 'Sleeper', 'General')),
    availability BOOLEAN DEFAULT TRUE
);


CREATE TABLE bookings (
    booking_id SERIAL PRIMARY KEY,
    user_id VARCHAR(50) REFERENCES users(user_id) ON DELETE CASCADE,
    train_id INT REFERENCES trains(train_id) ON DELETE CASCADE,
    pnr_number VARCHAR(20) UNIQUE NOT NULL,
    journey_date DATE NOT NULL,
    seat_id INT REFERENCES seats(seat_id) ON DELETE CASCADE,
    payment_id INT,
    status VARCHAR(20) CHECK (status IN ('confirmed', 'pending', 'cancelled')) DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE payments (
    payment_id SERIAL PRIMARY KEY,
    booking_id INT REFERENCES bookings(booking_id) ON DELETE CASCADE,
    payment_method VARCHAR(20) CHECK (payment_method IN ('UPI', 'Credit Card', 'Debit Card', 'Net Banking')),
    amount DECIMAL(10, 2) NOT NULL,
    payment_status VARCHAR(20) CHECK (payment_status IN ('success', 'failed', 'pending')) DEFAULT 'pending',
    transaction_id VARCHAR(50) UNIQUE NOT NULL,
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE pnr_status (
    pnr_id SERIAL PRIMARY KEY,
    pnr_number VARCHAR(20) UNIQUE REFERENCES bookings(pnr_number) ON DELETE CASCADE,
    current_status VARCHAR(20) CHECK (current_status IN ('confirmed', 'waiting', 'RAC', 'cancelled')),
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE cancellations (
    cancellation_id SERIAL PRIMARY KEY,
    booking_id INT REFERENCES bookings(booking_id) ON DELETE CASCADE,
    refund_status VARCHAR(20) CHECK (refund_status IN ('initiated', 'completed', 'failed')),
    refund_amount DECIMAL(10, 2),
    cancellation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

